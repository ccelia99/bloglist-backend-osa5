{"version":3,"sources":["components/Blog.js","components/Notification.js","services/blogs.js","services/login.js","App.js","index.js"],"names":["Blog","blog","title","author","Notification","message","className","baseUrl","token","getAll","axios","get","then","response","data","create","newObject","a","config","headers","Authorization","post","update","id","put","setToken","newToken","login","credentials","App","useState","blogs","setBlogs","newBlog","setNewBlog","newAuthor","setNewAuthor","newUrl","setNewUrl","errorMessage","setErrorMessage","username","setUsername","password","setPassword","user","setUser","useEffect","blogService","initialblogs","handleLogin","event","preventDefault","loginService","window","localStorage","setItem","JSON","stringify","setTimeout","loggedUserJSON","getItem","parse","addBlog","blogObject","url","returnedBlogs","concat","catch","error","onSubmit","type","value","name","onChange","target","onClick","removeItem","console","log","map","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.da7dff5f.chunk.js","sourcesContent":["import React from 'react'\nconst Blog = ({blog}) => (\n  <div>\n    {blog.title} {blog.author}\n  </div>  \n)\n\nexport default Blog","import React from 'react'\r\n\r\nconst Notification = ({ message }) => {\r\n    if (message === null) {\r\n      return null\r\n    }\r\n  \r\n    return (\r\n      <div className=\"error\">\r\n        {message}\r\n      </div>\r\n    )\r\n  }\r\n  export default Notification","import axios from 'axios'\nconst baseUrl = '/api/blogs'\n\nlet token = null\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`\n}\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\nconst create = async newObject => {\n  const config = {\n    headers: { Authorization: token },\n  }\n  const response = await axios.post(baseUrl, newObject, config)\n  return response.data\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${ baseUrl } /${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nexport default { getAll, create, update, setToken } ","import axios from 'axios'\r\nconst baseUrl = '/api/login'\r\n\r\nconst login = async credentials => {\r\n  const response = await axios.post(baseUrl, credentials)\r\n  return response.data\r\n}\r\n\r\nexport default { login }","import React, { useState, useEffect } from 'react'\nimport Blog from './components/Blog'\nimport Notification from './components/Notification'\nimport blogService from './services/blogs'\nimport loginService from './services/login'\n\n\nconst App = () => {\n  const [blogs, setBlogs] = useState([])\n  const [newBlog, setNewBlog] = useState('')\n  const [newAuthor, setNewAuthor] = useState('')\n  const [newUrl, setNewUrl] = useState('')\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [username, setUsername] = useState('') \n  const [password, setPassword] = useState('')\n  const [user, setUser] = useState(null)\n\n  useEffect(() => {\n    blogService.getAll().then(initialblogs =>\n      setBlogs( initialblogs )\n    )  \n  }, [])\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n\n    try {\n      const user = await loginService.login({\n        username, password,\n      })\n      window.localStorage.setItem(\n        'loggedBlogappUser', JSON.stringify(user)\n      ) \n      blogService.setToken(user.token)\n      setUser(user)\n      setUsername('')\n      setPassword('')\n    } catch (exception) {\n      setErrorMessage('wrong credentials')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }    \n  }\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      setUser(user)\n      blogService.setToken(user.token)\n    }\n  }, [])\n\n  const loginForm = () => (\n    <>\n      <h2>Log in to application</h2>\n      <form onSubmit={handleLogin}>\n        <div>\n          username\n            <input\n            type=\"text\"\n            value={username}\n            name=\"Username\"\n            onChange={({ target }) => setUsername(target.value)}\n          />\n        </div>\n        <div>\n          password\n            <input\n            type=\"password\"\n            value={password}\n            name=\"Password\"\n            onChange={({ target }) => setPassword(target.value)}\n          />\n        </div>\n        <button type=\"submit\">login</button>\n      </form>\n    </>        \n  )\n\n  const blogsToDisplay = () => {\n    const list = blogs.map(blog =>\n      <Blog key={blog.id} blog={blog} />)  \n      \n    return list\n  }\n\n  const logOut = () => {\n    window.localStorage.removeItem('loggedBlogappUser')\n    console.log('User logged out')\n\n    return\n  }\n\n  const blogForm = () => (\n    <form onSubmit={addBlog}>\n      <div>\n        title:\n        <input \n          type=\"text\"\n          value={newBlog}\n          name=\"title\"\n          onChange={({ target }) => setNewBlog(target.value)}\n      />\n      </div>\n      <div>\n        author:\n        <input \n          type=\"text\"\n          value={newAuthor}\n          name=\"author\"\n          onChange={({ target }) => setNewAuthor(target.value)}\n      />\n      </div>\n      <div>\n        url:\n        <input \n          type=\"text\"\n          value={newUrl}\n          name=\"url\"\n          onChange={({ target }) => setNewUrl(target.value)}\n      />\n      </div>\n      \n      <button type=\"submit\">create</button>\n    </form>\n  )\n  \n  const addBlog = (event) => {\n    event.preventDefault()\n    const blogObject = {\n      title: newBlog,\n      author: newAuthor,\n      url: newUrl,      \n    }\n\n    blogService\n      .create(blogObject)\n      .then(returnedBlogs => {\n        setErrorMessage(\n          `a new blog of ${newBlog} by ${newAuthor}`\n        )\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000)\n        setBlogs(blogs.concat(returnedBlogs))\n        setNewBlog('')\n        setNewAuthor('')\n        setNewUrl('')\n      })\n      .catch(error => {\n        setErrorMessage(\n          `Wrong username or password`\n        )\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000)\n        setNewBlog('')\n        setNewAuthor('')\n        setNewUrl('')\n      })   \n  }\n\n  return (\n    <div>\n      <Notification message={errorMessage} />\n\n      {user === null ?\n        loginForm() :         \n       ( \n        <>\n          <div>\n            <h2>Blogs</h2>\n            <p>{user.name} logged in\n            <button onClick={() => logOut()}>         \n            Logout\n            </button></p>\n            \n          </div>\n          <div>          \n            <h2>Create new!!!</h2>\n            <h2> </h2>\n            {blogForm()}\n          </div> \n          <div>\n            {blogsToDisplay()}\n          </div>\n        </> )}    \n      </div>\n    )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}